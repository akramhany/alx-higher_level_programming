>>> divide = __import__("2-matrix_divided").matrix_divided
>>> matrix = [
...	[1, 2, 3],
...	[4, 5, 6]
... ]

>>> divide(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

>>> divide(matrix, 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero

>>> divide(matrix, 'akram')
Traceback (most recent call last):
...
TypeError: div must be a number

>>> divide('akram', 1)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> divide([[1, 2], 'akram'], 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> divide([[1, 2], [3]], 3)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size

>>> divide(matrix, float('inf'))
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

>>> divide(matrix)
Traceback (most recent call last):
...
TypeError: matrix_divided() missing 1 required positional argument: 'div'

>>> divide()
Traceback (most recent call last):
...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
